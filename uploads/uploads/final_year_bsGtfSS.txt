+++++++++++++++++++++++++++++++++++
        <!-- <a href="{% url 'blog:index_view' %}" class="text-center">Summarize</a> -->

        <!-- <a href="{% url 'summary:summarize_text' %}" class="text-center">Summarize-Text</a> -->
====================================
# this code is for recent tasks from staff dashboard 
<h2 class="text-bold text-2xl">Student's records</h2>
    <div class="w-full flex gap-4 justify-start overflow-auto snap-x snap-mandatory p-4">
      {% for record in records %}
        <a href="{% url 'staff:detail' record.id %}" class="basis-96 flex-none p-4 flex flex-col items-start gap-2 shadow-md snap-start aspect-[2.5] bg-white bg-opacity-60 backdrop-blur-md rounded">
          <h2 class="text-semibold italic capitalize text-sm">{{ record.title }}</h2>
          <p class="text-xs test-slate-700 line-clamp-5">{{ record.description }}</p>

          <div class="mt-auto flex items-center justify-between gap-2 w-full">
            <div class="w-8 aspect-1 flex-none rounded-full bg-black"></div>
            <span class="text-xs text-slate-600 lowercase" style="font-variant: small-caps;">{{ record.user.username }}</span>
            <div class="ml-auto flex flex-col items-end text-xs text-gray-700">
              <span>Date: {{ record.created_at|date:'d M, Y' }}</span>
              <span>Time: {{ record.created_at|date:'h:i A' }}</span>
            </div>
          </div>
        </a>
      {% endfor %}
    </div>
  </section>

====================================
<section class="w-full py-8 pl-8 flex flex-col gap-3 items-start max-w-full">
  </section>
====================================
# create a media folder in the base dir
# add the following lines of code 
#	MEDIA_URL = '/media/'
#	MEDIA_ROOT = BASE_DIR / 'uploads'
# add the following to the project url
# from django.conf import settings
# from django.conf.urls.static import static 
#	if settings.DEBUG:
#	    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)


def pelUpload(request):# view
  if request.method == 'POST':
    title = request.POST['title']
    desc = request.POST['description']
    file = request.FILES['file_upload']

    res = PelUpload(title=title, description=desc, upload=file)
    res.save()
    messages.success(request, 'Submitted successfully!')
    return redirect('pelcon')
  else:
    messages.error(request, 'Failed to submit!')
    return redirect('myupload')


